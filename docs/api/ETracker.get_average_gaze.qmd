# ETracker.get_average_gaze { #DeToX.ETracker.get_average_gaze }

```python
ETracker.get_average_gaze(fallback_offscreen=True)
```

Compute smoothed gaze position from recent samples.

Averages valid gaze coordinates from rolling buffer to provide
stable gaze estimates for real-time applications. Handles missing
or invalid data gracefully.

## Parameters {.doc-section .doc-section-parameters}

| Name               | Type   | Description                                                                                                      | Default   |
|--------------------|--------|------------------------------------------------------------------------------------------------------------------|-----------|
| fallback_offscreen | bool   | Return offscreen position if no valid data available. Default True (returns position far outside screen bounds). | `True`    |

## Returns {.doc-section .doc-section-returns}

| Name   | Type          | Description                                                                                                           |
|--------|---------------|-----------------------------------------------------------------------------------------------------------------------|
|        | tuple or None | Average gaze position (x, y) in Tobii ADCS coordinates, offscreen position, or None if no data and fallback disabled. |

## Raises {.doc-section .doc-section-raises}

| Name   | Type         | Description                                                     |
|--------|--------------|-----------------------------------------------------------------|
|        | RuntimeError | If gaze_contingent() was not called first to initialize buffer. |

## Examples {.doc-section .doc-section-examples}

pos = tracker.get_average_gaze()
if pos is not None:
    psychopy_pos = Coords.get_psychopy_pos(win, pos)